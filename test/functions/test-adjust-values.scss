@include test-module('Adjust Values') {

  @include test('Adjust 1 value pair [function]') {
    $change-map-list: ((start: 20px, change: 60px),);
    $progress: 2 / 4;
    $ease: linear;

    $test: adjust-values($progress, $change-map-list, $ease);
    $expect: 50px;

    @include assert-equal($test, $expect,
      'Must return the calculated value for the change pair');

  }

  @include test('Adjust 2 value pairs [function]') {
    $change-map-list: (start: 5px, change: 15px),
                    (start: 10px, change: 0);
    $progress: 1 / 4;
    $ease: linear;

    $test: adjust-values($progress, $change-map-list, $ease);
    $expect: 8.75px 10px;

    @include assert-equal($test, $expect,
      'Must return the calculated value for the change pair');

  }

  @include test('Adjust 3 value pairs [function]') {
    $change-map-list: (start: 20%, change: 10%),
                    (start: 25%, change: 15%);
    $progress: 1 / 4;
    $ease: out-quint;

    $test: adjust-values($progress, $change-map-list, $ease);
    $expect: 27.63% 36.44%;

    @include assert-equal($test, $expect,
      'Must return the calculated value for the change pair');

  }


  @include test('Adjust 4 value pairs [function]') {
    $change-map-list: (start: 20px, change: 30px),
                    (start: 20px, change: 60px),
                    (start: 20px, change: -10px),
                    (start: 20px, change: 60px);
    $progress: 3 / 4;
    $ease: linear;

    $test: adjust-values($progress, $change-map-list, $ease);
    $expect: 42.5px 65px 12.5px 65px;

    @include assert-equal($test, $expect,
      'Must return the calculated value for the change pair');

  }

}
